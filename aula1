# Aula 1

## Um compilador é um composto

## Front End do compilador:

- Analisador Léxico                           -> Análise dos caracteres permitidos                                            -> Etapa Análise
- Analisador Sintático                        -> Análise da sintaxe de uma sentenca (sintaxe do for, sintaxe da declaração)   -> Etapa Análise
- Analisador Semântico                        -> Análise do sentido da frase (por exemplo: checagem de tipo)                  -> Etapa Análise

- Geração de Código Intermediario                                                                                             -> Etapa Síntese

"pobrema"
- Não tem problema léxico
  -> p#brema teria

"Você pobrema ao supermercado"
- Problema sintático, por que deveria ter um verbo no lugar de "pobrema". (Esperava um verbo)

## Teoria da computação

+-------------------------------------------------------------------------+
| Linguagens                | Máquinas          | Gramáticas              |
+---------------------------+-------------------+-------------------------+
| Ling. Regulares           | Autômato Finito   | Gram. Regular           |  <- Expressões Regulares | Analisador Léxico | Linear ao código de entrada
+---------------------------+-------------------+-------------------------|
| Ling. Livres de Contexto  | Autômato de Pilha | Gram. Livre de Contexto |  <- Analisador Sintático | Linear * Constante
+---------------------------+-------------------+-------------------------+

A análise semântica leva tempo polinomial, logo (Brute Force)
Tradução dirigida pela Sintaxe

## Back End:

- Otimização de código          -> Algoritmos rápidos para encontrar coisas absurdamente lentas e otimizar ;) A ideia é trocar segundos de compilação por minutos de execução -> Etapa Síntese
- Geração de código objeto      -> Gerar o belo assembly (a verdade das verdades, single point of truth)                                                                      -> Etapa Síntese

#################################################################################################################################################################

# O conceito de Alfabeto
  É um conjunto finito e não vazio de simbolos (simbolo é qualquer porra [óbvio])

Σ = {alfa, beta, whatever, símbolos poha}
Σ = {a, b}

Σ -> (Sigma maiúsculo)

# O conceito de palavra <cadeia> (Na verdade o nome correto é cadeia mas tem que falar palavra pros coleguinhas entenderem)
  Sequência finita de símbolos

w = a, w1 = ab, w2 = ba

w4 = ε (epsilon) <- cadeia vazia
TODOS OS ALFABETOS CONTÊM A CADEIA VAZIA
A CADEIA VAZIA ESTA CONTIDA EM QUALQUER ALFABETO

Σ0 = {ε}
Σ1 = {a, b}
Σ2 = {aa, ab, ba, bb}
.
.
Σ* = Σ0 ∪ Σ1 ∪ Σ2 ∪ Σ3 ∪ ... (EVERYONE) (Fechamento)
/\ Linguagem

